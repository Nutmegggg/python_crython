Nutmeg proof python file 
//Content 
- Basic 
- Lists
- If + Else statements
- Loops


//Basic
- Data types 
  - String (( e.g “Nutmeg” or anything with “” surrounding it)) 
  - Integer (( e.g 27 or any whole number )) 
  - Boolean (( e.g True or False , remember to always have capitals )) 
  - Float (( e.g 5.93 or any decimal number )) 
- How to convert data types 
  - Python sees “10” and 10 as different, and may fail if the wrong one is used, so you need to convert it to the right data type, you can do this via putting the data type you want to convert to in front of the variable you want to convert in brackets.
  (( e.g age = “10” , converted_age = int(age) ))
- Variable 
  - to create a variable use = 
  (( e.g user_name = nutmegggg , remember when making variables if you need a space use _ ))
- Print 
  - To ‘print’/write something in the shell 
  (( e.g print(“nutmeg”) , remember when printing variables use {} surrounding the variable (?))) 
- Embedding values 
  - to put 2 different values in a string using 2 variables and a % 
  (( e.g score = 1000 , message = “I scored %s points” , print(message % score) , I scored 1000 points - so essentially you put the sentence first, then the variable you want to insert after a % )) 
- Multiple embedded values 
  - use print(*sentence_variable* % (*variable_1*, *variable_2*))(( e.g Intro = “% is way better than %.” , print(intro (“math”, “french”)) , math is way better than french. ))
- Variable with no value 
  - you can use “None” ((capitalised)) when you want to make a variable with no value 
  (( e.g variable = None, if variable == None: , print(“The variable variable doesn’t have a value”) 

// Lists 
- List 
  - a list is useful as it can be manipulated , REMEMBER  LISTS GO 0,1,2,3 etc 
  (( e.g cyber_centurion = [ “JohnTheRipper” , “Samba” , “Firefox” , “Firewall” , “Terminal” ] )) 
- Indexing in lists 
  - in a list you can print just a number or certain number of things 
  (( e.g for one thing , print(cyber_centurion[4]) , Terminal , for multiple in terms of for example seeing third to fifth in my list, print(cyber_centurion[2:5]) , [“Firefox” , “Firewall” , “Terminal”]
- Adding stuff to lists 
  - to add something to your list you use the function .append ((e.g cyber_centurion.append(“Grass”) , print(cyber_centurion) , [ “JohnTheRipper” , “Samba” , “Firefox” , “Firewall” , “Terminal” , “Grass” ] )) 
- deleting stuff from lists - to delete stuff from your lists use del command ((e.g del cyber_centurion[0] , print(cyber_centurion) , [ “Samba” , “Firefox” , “Firewall” , “Terminal” , “Grass” ] )) 
- Map - a list with a key and a corresponding value, remember to use {} not [] ((e.g cool_people = { “Nutmeg” : “Artist” , “Max” : “Dumb frick” , “Stephanie” : “Dog” } , print(cool_people[“Max”]) , Dumb frick))
- Deleting a value in a map - again use the del function lmao ((e.g del cool_people[“Stephanie”] , print(cool_people) , { “Nutmeg” : “Artist” , “Max” : “Dumb frick” } ))

//If + Else statements
- if statements - if something does fit a criteria it will do something (( e.g age = 13 , if age > 20: , print(“you are too old”) , you are too old ))
- if-then-else statements - if something is true then do this, if something isn’t, do that (( e.g age = 13 , if age <= 12: , print(“L, you are young”), else: , print(“you still suck.”) , you still suck )
- if + elif statements - basically an if-then-else statement but you can put multiple elses lmao, note Elif is else + if (( e.g favourite_animal = dog , if favourite_animal == dog: , print(“lol get dogged”), elif favourite_animal == fish: , print(“fish gang for life”), elif favourite_animal == cat: , print(“insert rickroll”) , else: , print(“jeez I guess your not part of a cult?”) 
- Combining multiple elses - if you want 2 things to do the same thing use this, if you have multiple *insert variable* == *thing* use the “or” keyword , if you have a range of things e.g age >= 10  , age <= 13 , use the “and” keyword.

//Loops 
- For loop - you can use a for loop to print something multiple times, note - the x in ‘for x in range(0,5):’ means it will store the value in the variable x , also the range means it will start counting from 5 and stop counting before reaching 5 (( e.g for x in range(0,5): , print(‘music stand’) , music stand , music stand , music stand , music stand )) 
- Using a for loop in a list - if you have a list, you can loop things to be printed from a list (( e.g *insert list from earlier* , for i in cyber_centurion: , print(i) , JohnTheRipper , Samba , Firefox , Firewall , Terminal , Grass )) 
- while loops - essentially a loop running infinitely until it reaches the condition, note - the keyword ‘break’ is to break out of the loop (( e.g step = 0 , while step < 1000: print(step), if tired == True: , break , elif bad weather == True: , break, else: , step = step + 1 , note - this code won’t work due to you not defining tired and bad weather but that’s not the point ))
- Using 2 conditions in a while loop - self-explanatory, use “and” keyword ((e.g while x < 50 and y < 100:)) 
